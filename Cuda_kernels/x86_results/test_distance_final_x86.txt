      buildDirectory             kernelName  blockSizeX  blockSizeY  totalThreads smFrequencyCyclePerUsecond  elapsedCycles memoryThroughputPercent dramThroughputPercent durationUsecond l1TexCacheThroughputPercent l2CacheThroughputPercent  smActiveCycles computeSMThroughputPercent  blockSize  gridSize  registersPerThread sharedMemoryConfigSizeKbyte  driverSharedMemoryPerBlockByte dynamicSharedMemoryPerBlockKbyte  staticSharedMemoryPerBlockByte wavesPerSM  blockLimitSm  blockLimitRegisters  blockLimitSharedMem  blockLimitWarps  theoreticalActiveWarpsPerSm theoreticalOccupancyPercent achievedOccupancyPercent achievedActiveWarpsPerSm warningsWrn                                                                                                                                                                                                                                                                                                                                                           informationInfoptimizationHintsOpt
./max-distance/build computeDistancesKernel           1           1             1                 960.000000     1783860650                0.190000              0.010000             N/A                    0.190000                 0.040000      1783689405                  85.720000          1   8386560                  16                    0.032002                               0                         0.000000                               0  17.000000            16                  128                   16               32                           16                   50.000000                49.910000                15.970000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis sectionst. Speedup: 96.88%                                                                                          \n          Threads are executed in groups of 32 threads called warps. This kernel launch is configured to execute 1      \n          threads per block. Consequently, some threads in a warp are masked off and those hardware resources are       \n          unused. Try changing the number of threads per block to be a multiple of 32 threads. Between 128 and 256      \n          threads per block is a good initial range for experimentation. Use smaller thread blocks rather than one      \n          large thread block per multiprocessor if latency affects performance.  This is particularly beneficial to     \n          kernels that frequently call __syncthreads(). See the Hardware Model                                          \n          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      \n          details on launch configurations.                                                                             \nOPT   Est. Local Speedup: 50%                                                                                       \n          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       \n          hardware maximum of 8. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that    \n          can fit on the SM. This kernel's theoretical occupancy (50.0%) is limited by the required amount of shared    \n          memory.                                                                                                       \n
./max-distance/build computeDistancesKernel           1           2             2                 974.890000      892004652                0.190000              0.010000        914950.0                    0.190000                 0.040000       891953668                  85.710000          2   4193280                  16                    0.032002                               0                         0.000000                               0   8.000000            16                  128                   16               32                           16                   50.000000                49.900000                15.970000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis sectionst. Speedup: 93.75%                                                                                          \n          Threads are executed in groups of 32 threads called warps. This kernel launch is configured to execute 2      \n          threads per block. Consequently, some threads in a warp are masked off and those hardware resources are       \n          unused. Try changing the number of threads per block to be a multiple of 32 threads. Between 128 and 256      \n          threads per block is a good initial range for experimentation. Use smaller thread blocks rather than one      \n          large thread block per multiprocessor if latency affects performance.  This is particularly beneficial to     \n          kernels that frequently call __syncthreads(). See the Hardware Model                                          \n          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      \n          details on launch configurations.                                                                             \nOPT   Est. Local Speedup: 50%                                                                                       \n          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       \n          hardware maximum of 8. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that    \n          can fit on the SM. This kernel's theoretical occupancy (50.0%) is limited by the required amount of shared    \n          memory.                                                                                                       \n
./max-distance/build computeDistancesKernel           1           4             4                 974.930000      446088163                0.190000              0.020000        457540.0                    0.190000                 0.040000       446035218                  85.700000          4   2096640                  16                    0.032002                               0                         0.000000                               0   4.000000            16                  128                   16               32                           16                   50.000000                49.900000                15.970000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               OPT   Est. Speedup: 87.5%                                                                                           \n          Threads are executed in groups of 32 threads called warps. This kernel launch is configured to execute 4      \n          threads per block. Consequently, some threads in a warp are masked off and those hardware resources are       \n          unused. Try changing the number of threads per block to be a multiple of 32 threads. Between 128 and 256      \n          threads per block is a good initial range for experimentation. Use smaller thread blocks rather than one      \n          large thread block per multiprocessor if latency affects performance.  This is particularly beneficial to     \n          kernels that frequently call __syncthreads(). See the Hardware Model                                          \n          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      \n          details on launch configurations.                                                                             \nOPT   Est. Local Speedup: 50%                                                                                       \n          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       \n          hardware maximum of 8. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that    \n          can fit on the SM. This kernel's theoretical occupancy (50.0%) is limited by the required amount of shared    \n          memory.                                                                                                       \n
./max-distance/build computeDistancesKernel           1           8             8                 974.920000      223109769                0.190000              0.040000        228830.0                    0.190000                 0.020000       223068183                  85.680000          8   1048320                  16                    0.032002                               0                         0.000000                               0   2.000000            16                  128                   16               32                           16                   50.000000                49.880000                15.960000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               OPT   Est. Speedup: 75%                                                                                             \n          Threads are executed in groups of 32 threads called warps. This kernel launch is configured to execute 8      \n          threads per block. Consequently, some threads in a warp are masked off and those hardware resources are       \n          unused. Try changing the number of threads per block to be a multiple of 32 threads. Between 128 and 256      \n          threads per block is a good initial range for experimentation. Use smaller thread blocks rather than one      \n          large thread block per multiprocessor if latency affects performance.  This is particularly beneficial to     \n          kernels that frequently call __syncthreads(). See the Hardware Model                                          \n          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      \n          details on launch configurations.                                                                             \nOPT   Est. Local Speedup: 50%                                                                                       \n          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       \n          hardware maximum of 8. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that    \n          can fit on the SM. This kernel's theoretical occupancy (50.0%) is limited by the required amount of shared    \n          memory.                                                                                                       \n
./max-distance/build computeDistancesKernel           1          16            16                 966.310000      111650608                0.190000              0.090000        115510.0                    0.190000                 0.050000       111581502                  85.620000         16    524160                  16                    0.032002                               0                         0.000000                               0   1.000000            16                  128                   16               32                           16                   50.000000                49.850000                15.950000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis sectionst. Speedup: 50%                                                                                             \n          Threads are executed in groups of 32 threads called warps. This kernel launch is configured to execute 16     \n          threads per block. Consequently, some threads in a warp are masked off and those hardware resources are       \n          unused. Try changing the number of threads per block to be a multiple of 32 threads. Between 128 and 256      \n          threads per block is a good initial range for experimentation. Use smaller thread blocks rather than one      \n          large thread block per multiprocessor if latency affects performance.  This is particularly beneficial to     \n          kernels that frequently call __syncthreads(). See the Hardware Model                                          \n          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      \n          details on launch configurations.                                                                             \nOPT   Est. Local Speedup: 50%                                                                                       \n          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       \n          hardware maximum of 8. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that    \n          can fit on the SM. This kernel's theoretical occupancy (50.0%) is limited by the required amount of shared    \n          memory.                                                                                                       \n
./max-distance/build computeDistancesKernel           1          32            32                 948.590000       55857279                0.190000              0.170000         58880.0                    0.190000                 0.090000        55846647                  85.550000         32    262080                  16                    0.032002                               0                         0.000000                               0 546.000000            16                  128                   16               32                           16                   50.000000                49.800000                15.940000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis sectionst. Local Speedup: 50%                                                                                       \n          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       \n          hardware maximum of 8. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that    \n          can fit on the SM. This kernel's theoretical occupancy (50.0%) is limited by the required amount of shared    \n          memory.                                                                                                       \n
./max-distance/build computeDistancesKernel           1          64            64                 943.220000       49863445                0.210000              0.200000         52810.0                    0.220000                 0.100000        49805627                  95.930000         64    131040                  16                    0.032002                               0                         0.000000                               0 273.000000            16                   64                   16               16                           32                  100.000000                97.480000                31.190000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section
./max-distance/build computeDistancesKernel           1         128           128                 944.990000       49801925                0.210000              0.190000         52700.0                    0.220000                 0.100000        49759539                  95.950000        128     65520                  16                    0.032002                               0                         0.000000                               0 273.000000            16                   32                   16                8                           32                  100.000000                99.140000                31.730000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section
./max-distance/build computeDistancesKernel           1         256           256                 941.060000       49983779                0.210000              0.190000         53030.0                    0.220000                 0.100000        49837337                  95.740000        256     32760                  16                    0.032002                               0                         0.000000                               0 273.000000            16                   16                   16                4                           32                  100.000000                98.410000                31.490000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section
./max-distance/build computeDistancesKernel           1         512           512                 946.560000       49974002                0.210000              0.190000         52750.0                    0.220000                 0.100000        49793265                  95.710000        512     16380                  16                    0.032002                               0                         0.000000                               0 273.000000            16                    8                   16                2                           32                  100.000000                97.780000                31.290000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section
./max-distance/build computeDistancesKernel           1        1024          1024                 944.780000       50366764                0.210000              0.190000         53250.0                    0.220000                 0.100000        49989641                  94.970000          1      8190                  16                    0.032002                               0                         0.000000                               0 273.000000            16                    4                   16                1                           32                  100.000000                97.960000                31.350000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                N/A
./max-distance/build computeDistancesKernel           2           1             2                 974.850000      891992011                0.190000              0.010000        914960.0                    0.190000                 0.040000       891967414                  85.710000          2   4193280                  16                    0.032002                               0                         0.000000                               0   8.000000            16                  128                   16               32                           16                   50.000000                49.900000                15.970000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis sectionst. Speedup: 93.75%                                                                                          \n          Threads are executed in groups of 32 threads called warps. This kernel launch is configured to execute 2      \n          threads per block. Consequently, some threads in a warp are masked off and those hardware resources are       \n          unused. Try changing the number of threads per block to be a multiple of 32 threads. Between 128 and 256      \n          threads per block is a good initial range for experimentation. Use smaller thread blocks rather than one      \n          large thread block per multiprocessor if latency affects performance.  This is particularly beneficial to     \n          kernels that frequently call __syncthreads(). See the Hardware Model                                          \n          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      \n          details on launch configurations.                                                                             \nOPT   Est. Local Speedup: 50%                                                                                       \n          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       \n          hardware maximum of 8. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that    \n          can fit on the SM. This kernel's theoretical occupancy (50.0%) is limited by the required amount of shared    \n          memory.                                                                                                       \n
./max-distance/build computeDistancesKernel           2           2             4                 974.940000      446114133                0.190000              0.020000        457560.0                    0.190000                 0.040000       446058604                  85.690000          4   2096640                  16                    0.032002                               0                         0.000000                               0   4.000000            16                  128                   16               32                           16                   50.000000                49.900000                15.970000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis sectionst. Speedup: 87.5%                                                                                           \n          Threads are executed in groups of 32 threads called warps. This kernel launch is configured to execute 4      \n          threads per block. Consequently, some threads in a warp are masked off and those hardware resources are       \n          unused. Try changing the number of threads per block to be a multiple of 32 threads. Between 128 and 256      \n          threads per block is a good initial range for experimentation. Use smaller thread blocks rather than one      \n          large thread block per multiprocessor if latency affects performance.  This is particularly beneficial to     \n          kernels that frequently call __syncthreads(). See the Hardware Model                                          \n          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      \n          details on launch configurations.                                                                             \nOPT   Est. Local Speedup: 50%                                                                                       \n          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       \n          hardware maximum of 8. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that    \n          can fit on the SM. This kernel's theoretical occupancy (50.0%) is limited by the required amount of shared    \n          memory.                                                                                                       \n
./max-distance/build computeDistancesKernel           2           4             8                 974.780000      223117683                0.190000              0.040000        228850.0                    0.190000                 0.020000       223074487                  85.680000          8   1048320                  16                    0.032002                               0                         0.000000                               0   2.000000            16                  128                   16               32                           16                   50.000000                49.880000                15.960000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis sectionst. Speedup: 75%                                                                                             \n          Threads are executed in groups of 32 threads called warps. This kernel launch is configured to execute 8      \n          threads per block. Consequently, some threads in a warp are masked off and those hardware resources are       \n          unused. Try changing the number of threads per block to be a multiple of 32 threads. Between 128 and 256      \n          threads per block is a good initial range for experimentation. Use smaller thread blocks rather than one      \n          large thread block per multiprocessor if latency affects performance.  This is particularly beneficial to     \n          kernels that frequently call __syncthreads(). See the Hardware Model                                          \n          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      \n          details on launch configurations.                                                                             \nOPT   Est. Local Speedup: 50%                                                                                       \n          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       \n          hardware maximum of 8. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that    \n          can fit on the SM. This kernel's theoretical occupancy (50.0%) is limited by the required amount of shared    \n          memory.                                                                                                       \n
./max-distance/build computeDistancesKernel           2           8            16                 965.930000      111660610                0.190000              0.090000        115550.0                    0.190000                 0.050000       111577237                  85.620000         16    524160                  16                    0.032002                               0                         0.000000                               0   1.000000            16                  128                   16               32                           16                   50.000000                49.860000                15.950000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               OPT   Est. Speedup: 50%                                                                                             \n          Threads are executed in groups of 32 threads called warps. This kernel launch is configured to execute 16     \n          threads per block. Consequently, some threads in a warp are masked off and those hardware resources are       \n          unused. Try changing the number of threads per block to be a multiple of 32 threads. Between 128 and 256      \n          threads per block is a good initial range for experimentation. Use smaller thread blocks rather than one      \n          large thread block per multiprocessor if latency affects performance.  This is particularly beneficial to     \n          kernels that frequently call __syncthreads(). See the Hardware Model                                          \n          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      \n          details on launch configurations.                                                                             \nOPT   Est. Local Speedup: 50%                                                                                       \n          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       \n          hardware maximum of 8. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that    \n          can fit on the SM. This kernel's theoretical occupancy (50.0%) is limited by the required amount of shared    \n          memory.                                                                                                       \n
./max-distance/build computeDistancesKernel           2          16            32                 951.800000       55926347                0.190000              0.170000         58690.0                    0.190000                 0.090000        55847933                  85.540000         32    262080                  16                    0.032002                               0                         0.000000                               0 546.000000            16                  128                   16               32                           16                   50.000000                49.800000                15.940000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis sectionst. Local Speedup: 50%                                                                                       \n          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       \n          hardware maximum of 8. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that    \n          can fit on the SM. This kernel's theoretical occupancy (50.0%) is limited by the required amount of shared    \n          memory.                                                                                                       \n
./max-distance/build computeDistancesKernel           2          32            64                 947.870000       49959791                0.210000              0.190000         52580.0                    0.220000                 0.100000        49802153                  95.880000         64    131040                  16                    0.032002                               0                         0.000000                               0 273.000000            16                   64                   16               16                           32                  100.000000                97.520000                31.200000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section
./max-distance/build computeDistancesKernel           2          64           128                 944.160000       49883650                0.210000              0.190000         52750.0                    0.220000                 0.100000        49757149                  95.950000        128     65520                  16                    0.032002                               0                         0.000000                               0 273.000000            16                   32                   16                8                           32                  100.000000                99.160000                31.730000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section
./max-distance/build computeDistancesKernel           2         128           256                 945.900000       49907992                0.210000              0.190000         52760.0                    0.220000                 0.100000        49838008                  95.740000        256     32760                  16                    0.032002                               0                         0.000000                               0 273.000000            16                   16                   16                4                           32                  100.000000                98.410000                31.490000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                N/A
./max-distance/build computeDistancesKernel           2         256           512                 937.550000       49924953                0.210000              0.190000         53250.0                    0.220000                 0.100000        49793477                  95.710000        512     16380                  16                    0.032002                               0                         0.000000                               0 273.000000            16                    8                   16                2                           32                  100.000000                97.780000                31.290000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section
./max-distance/build computeDistancesKernel           2         512          1024                 946.500000       50389517                0.210000              0.190000         53150.0                    0.220000                 0.100000        49989673                  94.990000          1      8190                  16                    0.032002                               0                         0.000000                               0 273.000000            16                    4                   16                1                           32                  100.000000                97.960000                31.350000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section
./max-distance/build computeDistancesKernel           4           1             4                 974.800000      446093683                0.190000              0.020000        457580.0                    0.190000                 0.040000       446006937                  85.700000          4   2096640                  16                    0.032002                               0                         0.000000                               0   4.000000            16                  128                   16               32                           16                   50.000000                49.900000                15.970000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis sectionst. Speedup: 87.5%                                                                                           \n          Threads are executed in groups of 32 threads called warps. This kernel launch is configured to execute 4      \n          threads per block. Consequently, some threads in a warp are masked off and those hardware resources are       \n          unused. Try changing the number of threads per block to be a multiple of 32 threads. Between 128 and 256      \n          threads per block is a good initial range for experimentation. Use smaller thread blocks rather than one      \n          large thread block per multiprocessor if latency affects performance.  This is particularly beneficial to     \n          kernels that frequently call __syncthreads(). See the Hardware Model                                          \n          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      \n          details on launch configurations.                                                                             \nOPT   Est. Local Speedup: 50%                                                                                       \n          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       \n          hardware maximum of 8. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that    \n          can fit on the SM. This kernel's theoretical occupancy (50.0%) is limited by the required amount of shared    \n          memory.                                                                                                       \n
./max-distance/build computeDistancesKernel           4           2             8                 974.940000      223151143                0.190000              0.040000        228860.0                    0.190000                 0.020000       223073714                  85.660000          8   1048320                  16                    0.032002                               0                         0.000000                               0   2.000000            16                  128                   16               32                           16                   50.000000                49.880000                15.960000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis sectionst. Speedup: 75%                                                                                             \n          Threads are executed in groups of 32 threads called warps. This kernel launch is configured to execute 8      \n          threads per block. Consequently, some threads in a warp are masked off and those hardware resources are       \n          unused. Try changing the number of threads per block to be a multiple of 32 threads. Between 128 and 256      \n          threads per block is a good initial range for experimentation. Use smaller thread blocks rather than one      \n          large thread block per multiprocessor if latency affects performance.  This is particularly beneficial to     \n          kernels that frequently call __syncthreads(). See the Hardware Model                                          \n          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      \n          details on launch configurations.                                                                             \nOPT   Est. Local Speedup: 50%                                                                                       \n          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       \n          hardware maximum of 8. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that    \n          can fit on the SM. This kernel's theoretical occupancy (50.0%) is limited by the required amount of shared    \n          memory.                                                                                                       \n
./max-distance/build computeDistancesKernel           4           4            16                 966.220000      111626708                0.190000              0.090000        115490.0                    0.190000                 0.050000       111590246                  85.640000         16    524160                  16                    0.032002                               0                         0.000000                               0   1.000000            16                  128                   16               32                           16                   50.000000                49.860000                15.950000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis sectionst. Speedup: 50%                                                                                             \n          Threads are executed in groups of 32 threads called warps. This kernel launch is configured to execute 16     \n          threads per block. Consequently, some threads in a warp are masked off and those hardware resources are       \n          unused. Try changing the number of threads per block to be a multiple of 32 threads. Between 128 and 256      \n          threads per block is a good initial range for experimentation. Use smaller thread blocks rather than one      \n          large thread block per multiprocessor if latency affects performance.  This is particularly beneficial to     \n          kernels that frequently call __syncthreads(). See the Hardware Model                                          \n          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      \n          details on launch configurations.                                                                             \nOPT   Est. Local Speedup: 50%                                                                                       \n          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       \n          hardware maximum of 8. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that    \n          can fit on the SM. This kernel's theoretical occupancy (50.0%) is limited by the required amount of shared    \n          memory.                                                                                                       \n
./max-distance/build computeDistancesKernel           4           8            32                 953.090000       55944897                0.190000              0.170000         58620.0                    0.190000                 0.090000        55837113                  85.520000         32    262080                  16                    0.032002                               0                         0.000000                               0 546.000000            16                  128                   16               32                           16                   50.000000                49.800000                15.940000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     OPT   Est. Local Speedup: 50%                                                                                       \n          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       \n          hardware maximum of 8. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that    \n          can fit on the SM. This kernel's theoretical occupancy (50.0%) is limited by the required amount of shared    \n          memory.                                                                                                       \n
./max-distance/build computeDistancesKernel           4          16            64                 947.590000       49895782                0.210000              0.190000         52570.0                    0.220000                 0.100000        49795000                  95.930000         64    131040                  16                    0.032002                               0                         0.000000                               0 273.000000            16                   64                   16               16                           32                  100.000000                97.980000                31.350000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                N/A
./max-distance/build computeDistancesKernel           4          32           128                 946.370000       49793937                0.210000              0.190000         52620.0                    0.220000                 0.100000        49760969                  95.960000        128     65520                  16                    0.032002                               0                         0.000000                               0 273.000000            16                   32                   16                8                           32                  100.000000                99.080000                31.710000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section
./max-distance/build computeDistancesKernel           4          64           256                 936.590000       49907256                0.210000              0.190000         53290.0                    0.220000                 0.100000        49837550                  95.740000        256     32760                  16                    0.032002                               0                         0.000000                               0 273.000000            16                   16                   16                4                           32                  100.000000                98.410000                31.490000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section
./max-distance/build computeDistancesKernel           4         128           512                 943.080000       49996474                0.210000              0.190000         52940.0                    0.220000                 0.100000        49794033                  95.710000        512     16380                  16                    0.032002                               0                         0.000000                               0 273.000000            16                    8                   16                2                           32                  100.000000                97.780000                31.290000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section
./max-distance/build computeDistancesKernel           4         256          1024                 945.890000       50387072                0.210000              0.190000         53180.0                    0.220000                 0.100000        49989734                  94.990000          1      8190                  16                    0.032002                               0                         0.000000                               0 273.000000            16                    4                   16                1                           32                  100.000000                97.960000                31.350000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section
./max-distance/build computeDistancesKernel           8           1             8                 974.760000      223125284                0.190000              0.040000        228870.0                    0.190000                 0.020000       223066804                  85.680000          8   1048320                  16                    0.032002                               0                         0.000000                               0   2.000000            16                  128                   16               32                           16                   50.000000                49.880000                15.960000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis sectionst. Speedup: 75%                                                                                             \n          Threads are executed in groups of 32 threads called warps. This kernel launch is configured to execute 8      \n          threads per block. Consequently, some threads in a warp are masked off and those hardware resources are       \n          unused. Try changing the number of threads per block to be a multiple of 32 threads. Between 128 and 256      \n          threads per block is a good initial range for experimentation. Use smaller thread blocks rather than one      \n          large thread block per multiprocessor if latency affects performance.  This is particularly beneficial to     \n          kernels that frequently call __syncthreads(). See the Hardware Model                                          \n          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      \n          details on launch configurations.                                                                             \nOPT   Est. Local Speedup: 50%                                                                                       \n          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       \n          hardware maximum of 8. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that    \n          can fit on the SM. This kernel's theoretical occupancy (50.0%) is limited by the required amount of shared    \n          memory.                                                                                                       \n
./max-distance/build computeDistancesKernel           8           2            16                 966.520000      111671514                0.190000              0.090000        115470.0                    0.190000                 0.050000       111584818                  85.630000         16    524160                  16                    0.032002                               0                         0.000000                               0   1.000000            16                  128                   16               32                           16                   50.000000                49.850000                15.950000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis sectionst. Speedup: 50%                                                                                             \n          Threads are executed in groups of 32 threads called warps. This kernel launch is configured to execute 16     \n          threads per block. Consequently, some threads in a warp are masked off and those hardware resources are       \n          unused. Try changing the number of threads per block to be a multiple of 32 threads. Between 128 and 256      \n          threads per block is a good initial range for experimentation. Use smaller thread blocks rather than one      \n          large thread block per multiprocessor if latency affects performance.  This is particularly beneficial to     \n          kernels that frequently call __syncthreads(). See the Hardware Model                                          \n          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      \n          details on launch configurations.                                                                             \nOPT   Est. Local Speedup: 50%                                                                                       \n          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       \n          hardware maximum of 8. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that    \n          can fit on the SM. This kernel's theoretical occupancy (50.0%) is limited by the required amount of shared    \n          memory.                                                                                                       \n
./max-distance/build computeDistancesKernel           8           4            32                 943.210000       55930902                0.190000              0.170000         59210.0                    0.190000                 0.090000        55830662                  85.550000         32    262080                  16                    0.032002                               0                         0.000000                               0 546.000000            16                  128                   16               32                           16                   50.000000                49.800000                15.940000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis sectionst. Local Speedup: 50%                                                                                       \n          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       \n          hardware maximum of 8. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that    \n          can fit on the SM. This kernel's theoretical occupancy (50.0%) is limited by the required amount of shared    \n          memory.                                                                                                       \n
./max-distance/build computeDistancesKernel           8           8            64                 945.680000       49911643                0.210000              0.190000         52690.0                    0.220000                 0.100000        49800053                  95.890000         64    131040                  16                    0.032002                               0                         0.000000                               0 273.000000            16                   64                   16               16                           32                  100.000000                97.670000                31.250000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section
./max-distance/build computeDistancesKernel           8          16           128                 948.090000       49800633                0.210000              0.190000         52530.0                    0.220000                 0.100000        49758439                  95.950000        128     65520                  16                    0.032002                               0                         0.000000                               0 273.000000            16                   32                   16                8                           32                  100.000000                99.090000                31.710000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                N/A
./max-distance/build computeDistancesKernel           8          32           256                 940.920000       49904738                0.210000              0.190000         53040.0                    0.220000                 0.100000        49837224                  95.750000        256     32760                  16                    0.032002                               0                         0.000000                               0 273.000000            16                   16                   16                4                           32                  100.000000                98.410000                31.490000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section
./max-distance/build computeDistancesKernel           8          64           512                 935.490000       50033884                0.210000              0.190000         53390.0                    0.220000                 0.100000        49794146                  95.680000        512     16380                  16                    0.032002                               0                         0.000000                               0 273.000000            16                    8                   16                2                           32                  100.000000                97.780000                31.290000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section
./max-distance/build computeDistancesKernel           8         128          1024                 937.380000       50307148                0.210000              0.190000         53670.0                    0.220000                 0.100000        49989612                  94.980000          1      8190                  16                    0.032002                               0                         0.000000                               0 273.000000            16                    4                   16                1                           32                  100.000000                97.960000                31.350000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section
./max-distance/build computeDistancesKernel          16           1            16                 967.070000      111717574                0.190000              0.090000        115420.0                    0.190000                 0.050000       111583590                  85.620000         16    524160                  16                    0.032002                               0                         0.000000                               0   1.000000            16                  128                   16               32                           16                   50.000000                49.860000                15.950000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis sectionst. Speedup: 50%                                                                                             \n          Threads are executed in groups of 32 threads called warps. This kernel launch is configured to execute 16     \n          threads per block. Consequently, some threads in a warp are masked off and those hardware resources are       \n          unused. Try changing the number of threads per block to be a multiple of 32 threads. Between 128 and 256      \n          threads per block is a good initial range for experimentation. Use smaller thread blocks rather than one      \n          large thread block per multiprocessor if latency affects performance.  This is particularly beneficial to     \n          kernels that frequently call __syncthreads(). See the Hardware Model                                          \n          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      \n          details on launch configurations.                                                                             \nOPT   Est. Local Speedup: 50%                                                                                       \n          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       \n          hardware maximum of 8. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that    \n          can fit on the SM. This kernel's theoretical occupancy (50.0%) is limited by the required amount of shared    \n          memory.                                                                                                       \n
./max-distance/build computeDistancesKernel          16           2            32                 952.620000       55956039                0.190000              0.170000         58640.0                    0.190000                 0.090000        55848679                  85.540000         32    262080                  16                    0.032002                               0                         0.000000                               0 546.000000            16                  128                   16               32                           16                   50.000000                49.800000                15.940000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis sectionst. Local Speedup: 50%                                                                                       \n          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       \n          hardware maximum of 8. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that    \n          can fit on the SM. This kernel's theoretical occupancy (50.0%) is limited by the required amount of shared    \n          memory.                                                                                                       \n
./max-distance/build computeDistancesKernel          16           4            64                 935.950000       49833245                0.210000              0.190000         53240.0                    0.220000                 0.100000        49809121                  95.890000         64    131040                  16                    0.032002                               0                         0.000000                               0 273.000000            16                   64                   16               16                           32                  100.000000                97.290000                31.130000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section
./max-distance/build computeDistancesKernel          16           8           128                 940.990000       49799308                0.210000              0.200000         52920.0                    0.220000                 0.100000        49761815                  95.950000        128     65520                  16                    0.032002                               0                         0.000000                               0 273.000000            16                   32                   16                8                           32                  100.000000                99.050000                31.690000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                N/A
./max-distance/build computeDistancesKernel          16          16           256                 948.780000       50025393                0.210000              0.190000         52610.0                    0.220000                 0.100000        49837916                  95.730000        256     32760                  16                    0.032002                               0                         0.000000                               0 273.000000            16                   16                   16                4                           32                  100.000000                98.410000                31.490000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                N/A
./max-distance/build computeDistancesKernel          16          32           512                 941.890000       49927573                0.210000              0.200000         53010.0                    0.220000                 0.100000        49794356                  95.710000        512     16380                  16                    0.032002                               0                         0.000000                               0 273.000000            16                    8                   16                2                           32                  100.000000                97.780000                31.290000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                N/A
./max-distance/build computeDistancesKernel          16          64          1024                 937.790000       50306569                0.210000              0.190000         53640.0                    0.220000                 0.100000        49989557                  94.980000          1      8190                  16                    0.032002                               0                         0.000000                               0 273.000000            16                    4                   16                1                           32                  100.000000                97.960000                31.350000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section
./max-distance/build computeDistancesKernel          32           1            32                 950.690000       55954203                0.190000              0.170000         58760.0                    0.190000                 0.090000        55849192                  85.530000         32    262080                  16                    0.032002                               0                         0.000000                               0 546.000000            16                  128                   16               32                           16                   50.000000                49.800000                15.940000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis sectionst. Local Speedup: 50%                                                                                       \n          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       \n          hardware maximum of 8. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that    \n          can fit on the SM. This kernel's theoretical occupancy (50.0%) is limited by the required amount of shared    \n          memory.                                                                                                       \n
./max-distance/build computeDistancesKernel          32           2            64                 944.050000       49828494                0.210000              0.190000         52780.0                    0.220000                 0.100000        49799780                  95.900000         64    131040                  16                    0.032002                               0                         0.000000                               0 273.000000            16                   64                   16               16                           32                  100.000000                97.710000                31.270000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section
./max-distance/build computeDistancesKernel          32           4           128                 946.490000       49801660                0.210000              0.190000         52620.0                    0.220000                 0.100000        49760492                  95.950000        128     65520                  16                    0.032002                               0                         0.000000                               0 273.000000            16                   32                   16                8                           32                  100.000000                99.040000                31.690000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section
./max-distance/build computeDistancesKernel          32           8           256                 941.170000       49908714                0.210000              0.200000         53030.0                    0.220000                 0.100000        49837811                  95.740000        256     32760                  16                    0.032002                               0                         0.000000                               0 273.000000            16                   16                   16                4                           32                  100.000000                98.410000                31.490000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section
./max-distance/build computeDistancesKernel          32          16           512                 948.090000       49934993                0.210000              0.190000         52670.0                    0.220000                 0.100000        49793865                  95.690000        512     16380                  16                    0.032002                               0                         0.000000                               0 273.000000            16                    8                   16                2                           32                  100.000000                97.780000                31.290000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section
./max-distance/build computeDistancesKernel          32          32          1024                 943.680000       50425470                0.210000              0.190000         53310.0                    0.220000                 0.100000        49990019                  94.980000          1      8190                  16                    0.032002                               0                         0.000000                               0 273.000000            16                    4                   16                1                           32                  100.000000                97.960000                31.350000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                N/A
./max-distance/build computeDistancesKernel          64           1            64                 948.410000       49815762                0.210000              0.190000         52530.0                    0.220000                 0.100000        49800458                  95.920000         64    131040                  16                    0.032002                               0                         0.000000                               0 273.000000            16                   64                   16               16                           32                  100.000000                97.810000                31.300000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section
./max-distance/build computeDistancesKernel          64           2           128                 945.830000       49798063                0.210000              0.190000         52650.0                    0.220000                 0.100000        49761547                  95.950000        128     65520                  16                    0.032002                               0                         0.000000                               0 273.000000            16                   32                   16                8                           32                  100.000000                99.110000                31.720000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section
./max-distance/build computeDistancesKernel          64           4           256                 948.010000       49903819                0.210000              0.190000         52640.0                    0.220000                 0.100000        49837488                  95.750000        256     32760                  16                    0.032002                               0                         0.000000                               0 273.000000            16                   16                   16                4                           32                  100.000000                98.410000                31.490000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section
./max-distance/build computeDistancesKernel          64           8           512                 944.000000       49928548                0.210000              0.190000         52890.0                    0.220000                 0.100000        49794440                  95.700000        512     16380                  16                    0.032002                               0                         0.000000                               0 273.000000            16                    8                   16                2                           32                  100.000000                97.780000                31.290000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section
./max-distance/build computeDistancesKernel          64          16          1024                 949.520000       50434225                0.210000              0.190000         53010.0                    0.220000                 0.100000        49989693                  94.930000          1      8190                  16                    0.032002                               0                         0.000000                               0 273.000000            16                    4                   16                1                           32                  100.000000                97.960000                31.350000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section
./max-distance/build computeDistancesKernel         128           1           128                 941.690000       49804194                0.210000              0.190000         52890.0                    0.220000                 0.100000        49759342                  95.940000        128     65520                  16                    0.032002                               0                         0.000000                               0 273.000000            16                   32                   16                8                           32                  100.000000                99.050000                31.700000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section
./max-distance/build computeDistancesKernel         128           2           256                 938.530000       49906965                0.210000              0.190000         53180.0                    0.220000                 0.100000        49836502                  95.750000        256     32760                  16                    0.032002                               0                         0.000000                               0 273.000000            16                   16                   16                4                           32                  100.000000                98.420000                31.490000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section
./max-distance/build computeDistancesKernel         128           4           512                 946.510000       49930587                0.210000              0.190000         52750.0                    0.220000                 0.100000        49795073                  95.700000        512     16380                  16                    0.032002                               0                         0.000000                               0 273.000000            16                    8                   16                2                           32                  100.000000                97.780000                31.290000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section
./max-distance/build computeDistancesKernel         128           8          1024                 945.140000       50310683                0.210000              0.190000         53230.0                    0.220000                 0.100000        49989745                  94.980000          1      8190                  16                    0.032002                               0                         0.000000                               0 273.000000            16                    4                   16                1                           32                  100.000000                97.960000                31.350000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section
./max-distance/build computeDistancesKernel         256           1           256                 939.970000       49902029                0.210000              0.190000         53090.0                    0.220000                 0.100000        49837809                  95.750000        256     32760                  16                    0.032002                               0                         0.000000                               0 273.000000            16                   16                   16                4                           32                  100.000000                98.410000                31.490000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section
./max-distance/build computeDistancesKernel         256           2           512                 947.770000       50048105                0.210000              0.190000         52680.0                    0.220000                 0.100000        49794201                  95.700000        512     16380                  16                    0.032002                               0                         0.000000                               0 273.000000            16                    8                   16                2                           32                  100.000000                97.780000                31.290000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section
./max-distance/build computeDistancesKernel         256           4          1024                 947.610000       50306594                0.210000              0.190000         53090.0                    0.220000                 0.100000        49989678                  94.980000          1      8190                  16                    0.032002                               0                         0.000000                               0 273.000000            16                    4                   16                1                           32                  100.000000                97.960000                31.350000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section
./max-distance/build computeDistancesKernel         512           1           512                 945.790000       49929565                0.210000              0.190000         52790.0                    0.220000                 0.100000        49793489                  95.700000        512     16380                  16                    0.032002                               0                         0.000000                               0 273.000000            16                    8                   16                2                           32                  100.000000                97.780000                31.290000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section
./max-distance/build computeDistancesKernel         512           2          1024                 937.180000       50307132                0.210000              0.190000         53680.0                    0.220000                 0.100000        49989685                  94.980000          1      8190                  16                    0.032002                               0                         0.000000                               0 273.000000            16                    4                   16                1                           32                  100.000000                97.960000                31.350000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section
./max-distance/build computeDistancesKernel        1024           1          1024                 948.510000       50306447                0.210000              0.190000         53040.0                    0.220000                 0.100000        49989671                  94.980000          1      8190                  16                    0.032002                               0                         0.000000                               0 273.000000            16                    4                   16                1                           32                  100.000000                97.960000                31.350000         N/A INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   \n          further improve performance, work will likely need to be shifted from the most utilized to another unit.      \n          Start by analyzing workloads in the Compute Workload Analysis section
./max-distance/build        reduceMaxKernel           1           1             1                 940.110000       10690541               20.920000              0.930000         11370.0                   29.940000                 3.280000         7469351                  20.920000          1   4193280                  16                    0.032002                               0                         4.000000                               0   8.000000            16                  128                  128               32                           16                   50.000000                32.620000                10.440000         N/A                                                                                                                                                                                                                                                                                                                                                                      N/A OPT   This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance \n          of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate    \n          latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.                 \nOPT   Est. Speedup: 96.88%                                                                                          \n          Threads are executed in groups of 32 threads called warps. This kernel launch is configured to execute 1      \n          threads per block. Consequently, some threads in a warp are masked off and those hardware resources are       \n          unused. Try changing the number of threads per block to be a multiple of 32 threads. Between 128 and 256      \n          threads per block is a good initial range for experimentation. Use smaller thread blocks rather than one      \n          large thread block per multiprocessor if latency affects performance.  This is particularly beneficial to     \n          kernels that frequently call __syncthreads(). See the Hardware Model                                          \n          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      \n          details on launch configurations.                                                                             \nOPT   Est. Local Speedup: 34.76%                                                                                    \n          The difference between calculated theoretical (50.0%) and measured achieved occupancy (32.6%) can be the      \n          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   \n          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   \n          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     \n          optimizing occupancy.                                                                                         \n    ----- --------------------------------------------------------------------------------------------------------------\n    OPT   Est. Local Speedup: 50%                                                                                       \n          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       \n          hardware maximum of 8. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that    \n          can fit on the SM.                                                                                            \n
./max-distance/build        reduceMaxKernel           1           2             2                 932.780000        5191027               29.640000              1.910000          5560.0                   45.820000                 3.530000         4394160                  29.640000          2   2096640                  16                    0.032002                               0                         8.000000                               0   4.000000            16                  128                  128               32                           16                   50.000000                32.450000                10.380000         N/A                                                                                                                                                                                                                                                                                                                                                                      N/A OPT   This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance \n          of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate    \n          latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.                 \nOPT   Est. Speedup: 93.75%                                                                                          \n          Threads are executed in groups of 32 threads called warps. This kernel launch is configured to execute 2      \n          threads per block. Consequently, some threads in a warp are masked off and those hardware resources are       \n          unused. Try changing the number of threads per block to be a multiple of 32 threads. Between 128 and 256      \n          threads per block is a good initial range for experimentation. Use smaller thread blocks rather than one      \n          large thread block per multiprocessor if latency affects performance.  This is particularly beneficial to     \n          kernels that frequently call __syncthreads(). See the Hardware Model                                          \n          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      \n          details on launch configurations.                                                                             \nOPT   Est. Local Speedup: 35.1%                                                                                     \n          The difference between calculated theoretical (50.0%) and measured achieved occupancy (32.5%) can be the      \n          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   \n          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   \n          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     \n          optimizing occupancy.                                                                                         \n    ----- --------------------------------------------------------------------------------------------------------------\n    OPT   Est. Local Speedup: 50%                                                                                       \n          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       \n          hardware maximum of 8. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that    \n          can fit on the SM.                                                                                            \n
./max-distance/build        reduceMaxKernel           1           4             4                 956.570000        3260039               30.150000              3.000000          3390.0                   49.540000                 2.880000         2834969                  30.150000          4   1048320                  16                    0.032002                               0                        16.000000                               0   2.000000            16                  128                  128               32                           16                   50.000000                35.410000                11.330000         N/A                                                                                                                                                                                                                                                                                                                                                                      N/A OPT   This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance \n          of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate    \n          latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.                 \nOPT   Est. Speedup: 87.5%                                                                                           \n          Threads are executed in groups of 32 threads called warps. This kernel launch is configured to execute 4      \n          threads per block. Consequently, some threads in a warp are masked off and those hardware resources are       \n          unused. Try changing the number of threads per block to be a multiple of 32 threads. Between 128 and 256      \n          threads per block is a good initial range for experimentation. Use smaller thread blocks rather than one      \n          large thread block per multiprocessor if latency affects performance.  This is particularly beneficial to     \n          kernels that frequently call __syncthreads(). See the Hardware Model                                          \n          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      \n          details on launch configurations.                                                                             \nOPT   Est. Local Speedup: 29.18%                                                                                    \n          The difference between calculated theoretical (50.0%) and measured achieved occupancy (35.4%) can be the      \n          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   \n          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   \n          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     \n          optimizing occupancy.                                                                                         \n    ----- --------------------------------------------------------------------------------------------------------------\n    OPT   Est. Local Speedup: 50%                                                                                       \n          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       \n          hardware maximum of 8. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that    \n          can fit on the SM.                                                                                            \n
./max-distance/build        reduceMaxKernel           1           8             8                 949.850000        2059394               28.990000              4.760000          2160.0                   49.450000                 3.440000         1573295                  28.990000          8    524160                  16                    0.032002                               0                        32.000000                               0   1.000000            16                  128                  128               32                           16                   50.000000                41.400000                13.250000         N/A                                                                                                                                                                                                                                                                                                                                                                      N/A                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       OPT   This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance \n          of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate    \n          latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.                 \nOPT   Est. Speedup: 75%                                                                                             \n          Threads are executed in groups of 32 threads called warps. This kernel launch is configured to execute 8      \n          threads per block. Consequently, some threads in a warp are masked off and those hardware resources are       \n          unused. Try changing the number of threads per block to be a multiple of 32 threads. Between 128 and 256      \n          threads per block is a good initial range for experimentation. Use smaller thread blocks rather than one      \n          large thread block per multiprocessor if latency affects performance.  This is particularly beneficial to     \n          kernels that frequently call __syncthreads(). See the Hardware Model                                          \n          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      \n          details on launch configurations.                                                                             \nOPT   Est. Local Speedup: 50%                                                                                       \n          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       \n          hardware maximum of 8. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that    \n          can fit on the SM.                                                                                            \n
./max-distance/build        reduceMaxKernel           1          16            16                 949.350000        1130170               31.060000              8.650000          1190.0                   54.350000                 5.210000          898195                  31.060000         16    262080                  16                    0.032002                               0                        64.000000                               0 546.000000            16                  128                  128               32                           16                   50.000000                42.040000                13.450000         N/A                                                                                                                                                                                                                                                                                                                                                                      N/A                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       OPT   This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance \n          of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate    \n          latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.                 \nOPT   Est. Speedup: 50%                                                                                             \n          Threads are executed in groups of 32 threads called warps. This kernel launch is configured to execute 16     \n          threads per block. Consequently, some threads in a warp are masked off and those hardware resources are       \n          unused. Try changing the number of threads per block to be a multiple of 32 threads. Between 128 and 256      \n          threads per block is a good initial range for experimentation. Use smaller thread blocks rather than one      \n          large thread block per multiprocessor if latency affects performance.  This is particularly beneficial to     \n          kernels that frequently call __syncthreads(). See the Hardware Model                                          \n          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      \n          details on launch configurations.                                                                             \nOPT   Est. Local Speedup: 50%                                                                                       \n          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       \n          hardware maximum of 8. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that    \n          can fit on the SM.                                                                                            \n
./max-distance/build        reduceMaxKernel           1          32            32                 957.210000         612290               32.990000             15.980000          636.32                   58.810000                 8.660000          510821                  32.990000         32    131040                  16                    0.032002                               0                       128.000000                               0 273.000000            16                  128                  128               32                           16                   50.000000                41.970000                13.430000         N/A                                                                                                                                                                                                                                                                                                                                                                      N/A                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             OPT   This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance \n          of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate    \n          latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.                 \nOPT   Est. Local Speedup: 50%                                                                                       \n          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       \n          hardware maximum of 8. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that    \n          can fit on the SM.                                                                                            \n
./max-distance/build        reduceMaxKernel           1          64            64                 923.860000         321615               68.160000             29.820000          346.82                   96.860000                15.450000          318719                  68.160000         64     65520                  16                    0.032002                               0                       256.000000                               0 136.500000            16                   64                  128               16                           32                  100.000000                88.540000                28.330000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sectionsst. Local Speedup: 11.46%                                                                                    \n          The difference between calculated theoretical (100.0%) and measured achieved occupancy (88.5%) can be the     \n          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   \n          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   \n          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     \n          optimizing occupancy.                                                                                         \n
./max-distance/build        reduceMaxKernel           1         128           128                 923.700000         313505               77.080000             30.630000          337.41                   93.930000                15.400000          310169                  77.080000        128     32760                  16                    0.032002                               0                       512.000000                               0 136.500000            16                   32                   64                8                           32                  100.000000                88.730000                28.390000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sectionsst. Local Speedup: 11.27%                                                                                    \n          The difference between calculated theoretical (100.0%) and measured achieved occupancy (88.7%) can be the     \n          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   \n          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   \n          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     \n          optimizing occupancy.                                                                                         \n
./max-distance/build        reduceMaxKernel           1         256           256                 926.210000         343738               77.300000             27.960000          369.12                   85.930000                13.820000          339836                  77.300000        256     16380                  16                    0.032002                               0                         1.020000                               0 136.500000            16                   16                   32                4                           32                  100.000000                89.770000                28.730000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sectionsst. Local Speedup: 10.23%                                                                                    \n          The difference between calculated theoretical (100.0%) and measured achieved occupancy (89.8%) can be the     \n          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   \n          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   \n          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     \n          optimizing occupancy.                                                                                         \n
./max-distance/build        reduceMaxKernel           1         512           512                 926.920000         397506               73.160000             24.200000          426.72                   77.300000                11.850000          393497                  73.160000        512      8190                  16                    0.032002                               0                         2.050000                               0 136.500000            16                    8                   16                2                           32                  100.000000                90.910000                29.090000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sections
./max-distance/build        reduceMaxKernel           1        1024          1024                 931.220000         528999               60.050000             18.330000          563.36                   63.460000                 8.930000          496467                  60.050000          1      4095                  16                    0.032002                               0                         4.100000                               0 136.500000            16                    4                    8                1                           32                  100.000000                97.510000                31.200000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sections
./max-distance/build        reduceMaxKernel           2           1             2                 931.900000        5185467               29.650000              1.910000          5560.0                   45.830000                 3.520000         4390355                  29.650000          2   2096640                  16                    0.032002                               0                         8.000000                               0   4.000000            16                  128                  128               32                           16                   50.000000                32.450000                10.380000         N/A                                                                                                                                                                                                                                                                                                                                                                      N/A OPT   This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance \n          of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate    \n          latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.                 \nOPT   Est. Speedup: 93.75%                                                                                          \n          Threads are executed in groups of 32 threads called warps. This kernel launch is configured to execute 2      \n          threads per block. Consequently, some threads in a warp are masked off and those hardware resources are       \n          unused. Try changing the number of threads per block to be a multiple of 32 threads. Between 128 and 256      \n          threads per block is a good initial range for experimentation. Use smaller thread blocks rather than one      \n          large thread block per multiprocessor if latency affects performance.  This is particularly beneficial to     \n          kernels that frequently call __syncthreads(). See the Hardware Model                                          \n          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      \n          details on launch configurations.                                                                             \nOPT   Est. Local Speedup: 35.11%                                                                                    \n          The difference between calculated theoretical (50.0%) and measured achieved occupancy (32.4%) can be the      \n          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   \n          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   \n          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     \n          optimizing occupancy.                                                                                         \n    ----- --------------------------------------------------------------------------------------------------------------\n    OPT   Est. Local Speedup: 50%                                                                                       \n          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       \n          hardware maximum of 8. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that    \n          can fit on the SM.                                                                                            \n
./max-distance/build        reduceMaxKernel           2           2             4                 931.350000        3222966               30.630000              3.010000          3430.0                   50.330000                 2.910000         2826838                  30.630000          4   1048320                  16                    0.032002                               0                        16.000000                               0   2.000000            16                  128                  128               32                           16                   50.000000                35.230000                11.270000         N/A                                                                                                                                                                                                                                                                                                                                                                      N/A OPT   This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance \n          of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate    \n          latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.                 \nOPT   Est. Speedup: 87.5%                                                                                           \n          Threads are executed in groups of 32 threads called warps. This kernel launch is configured to execute 4      \n          threads per block. Consequently, some threads in a warp are masked off and those hardware resources are       \n          unused. Try changing the number of threads per block to be a multiple of 32 threads. Between 128 and 256      \n          threads per block is a good initial range for experimentation. Use smaller thread blocks rather than one      \n          large thread block per multiprocessor if latency affects performance.  This is particularly beneficial to     \n          kernels that frequently call __syncthreads(). See the Hardware Model                                          \n          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      \n          details on launch configurations.                                                                             \nOPT   Est. Local Speedup: 29.55%                                                                                    \n          The difference between calculated theoretical (50.0%) and measured achieved occupancy (35.2%) can be the      \n          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   \n          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   \n          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     \n          optimizing occupancy.                                                                                         \n    ----- --------------------------------------------------------------------------------------------------------------\n    OPT   Est. Local Speedup: 50%                                                                                       \n          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       \n          hardware maximum of 8. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that    \n          can fit on the SM.                                                                                            \n
./max-distance/build        reduceMaxKernel           2           4             8                 939.480000        2063003               29.030000              4.700000          2180.0                   49.520000                 3.410000         1567826                  29.030000          8    524160                  16                    0.032002                               0                        32.000000                               0   1.000000            16                  128                  128               32                           16                   50.000000                41.340000                13.230000         N/A                                                                                                                                                                                                                                                                                                                                                                      N/A                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       OPT   This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance \n          of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate    \n          latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.                 \nOPT   Est. Speedup: 75%                                                                                             \n          Threads are executed in groups of 32 threads called warps. This kernel launch is configured to execute 8      \n          threads per block. Consequently, some threads in a warp are masked off and those hardware resources are       \n          unused. Try changing the number of threads per block to be a multiple of 32 threads. Between 128 and 256      \n          threads per block is a good initial range for experimentation. Use smaller thread blocks rather than one      \n          large thread block per multiprocessor if latency affects performance.  This is particularly beneficial to     \n          kernels that frequently call __syncthreads(). See the Hardware Model                                          \n          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      \n          details on launch configurations.                                                                             \nOPT   Est. Local Speedup: 50%                                                                                       \n          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       \n          hardware maximum of 8. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that    \n          can fit on the SM.                                                                                            \n
./max-distance/build        reduceMaxKernel           2           8            16                 936.500000        1135945               31.060000              8.550000          1200.0                   54.360000                 5.180000          900678                  31.060000         16    262080                  16                    0.032002                               0                        64.000000                               0 546.000000            16                  128                  128               32                           16                   50.000000                41.930000                13.420000         N/A                                                                                                                                                                                                                                                                                                                                                                      N/A                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       OPT   This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance \n          of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate    \n          latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.                 \nOPT   Est. Speedup: 50%                                                                                             \n          Threads are executed in groups of 32 threads called warps. This kernel launch is configured to execute 16     \n          threads per block. Consequently, some threads in a warp are masked off and those hardware resources are       \n          unused. Try changing the number of threads per block to be a multiple of 32 threads. Between 128 and 256      \n          threads per block is a good initial range for experimentation. Use smaller thread blocks rather than one      \n          large thread block per multiprocessor if latency affects performance.  This is particularly beneficial to     \n          kernels that frequently call __syncthreads(). See the Hardware Model                                          \n          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      \n          details on launch configurations.                                                                             \nOPT   Est. Local Speedup: 50%                                                                                       \n          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       \n          hardware maximum of 8. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that    \n          can fit on the SM.                                                                                            \n
./max-distance/build        reduceMaxKernel           2          16            32                 943.490000         614018               32.950000             15.750000          646.34                   58.740000                 8.600000          510439                  32.950000         32    131040                  16                    0.032002                               0                       128.000000                               0 273.000000            16                  128                  128               32                           16                   50.000000                42.100000                13.470000         N/A                                                                                                                                                                                                                                                                                                                                                                      N/A                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             OPT   This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance \n          of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate    \n          latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.                 \nOPT   Est. Local Speedup: 50%                                                                                       \n          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       \n          hardware maximum of 8. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that    \n          can fit on the SM.                                                                                            \n
./max-distance/build        reduceMaxKernel           2          32            64                 925.680000         322386               68.150000             29.790000          346.18                   96.850000                15.430000          318769                  68.150000         64     65520                  16                    0.032002                               0                       256.000000                               0 136.500000            16                   64                  128               16                           32                  100.000000                88.490000                28.320000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sections.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  OPT   Est. Local Speedup: 11.51%                                                                                    \n          The difference between calculated theoretical (100.0%) and measured achieved occupancy (88.5%) can be the     \n          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   \n          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   \n          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     \n          optimizing occupancy.                                                                                         \n
./max-distance/build        reduceMaxKernel           2          64           128                 924.720000         313799               77.030000             30.580000          337.25                   93.880000                15.370000          310066                  77.030000        128     32760                  16                    0.032002                               0                       512.000000                               0 136.500000            16                   32                   64                8                           32                  100.000000                88.730000                28.390000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sectionsst. Local Speedup: 11.27%                                                                                    \n          The difference between calculated theoretical (100.0%) and measured achieved occupancy (88.7%) can be the     \n          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   \n          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   \n          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     \n          optimizing occupancy.                                                                                         \n
./max-distance/build        reduceMaxKernel           2         128           256                 925.750000         343399               77.350000             28.000000          369.02                   86.000000                13.840000          340065                  77.350000        256     16380                  16                    0.032002                               0                         1.020000                               0 136.500000            16                   16                   32                4                           32                  100.000000                89.770000                28.730000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sectionsst. Local Speedup: 10.23%                                                                                    \n          The difference between calculated theoretical (100.0%) and measured achieved occupancy (89.8%) can be the     \n          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   \n          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   \n          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     \n          optimizing occupancy.                                                                                         \n
./max-distance/build        reduceMaxKernel           2         256           512                 927.120000         397356               73.210000             24.220000          426.37                   77.350000                11.840000          393160                  73.210000        512      8190                  16                    0.032002                               0                         2.050000                               0 136.500000            16                    8                   16                2                           32                  100.000000                90.910000                29.090000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sections
./max-distance/build        reduceMaxKernel           2         512          1024                 929.710000         527388               60.060000             18.280000          564.16                   63.450000                 8.890000          496502                  60.060000          1      4095                  16                    0.032002                               0                         4.100000                               0 136.500000            16                    4                    8                1                           32                  100.000000                97.510000                31.200000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sections
./max-distance/build        reduceMaxKernel           4           1             4                 939.860000        3249948               30.380000              3.000000          3430.0                   49.920000                 2.890000         2828081                  30.380000          4   1048320                  16                    0.032002                               0                        16.000000                               0   2.000000            16                  128                  128               32                           16                   50.000000                35.290000                11.290000         N/A                                                                                                                                                                                                                                                                                                                                                                      N/A OPT   This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance \n          of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate    \n          latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.                 \nOPT   Est. Speedup: 87.5%                                                                                           \n          Threads are executed in groups of 32 threads called warps. This kernel launch is configured to execute 4      \n          threads per block. Consequently, some threads in a warp are masked off and those hardware resources are       \n          unused. Try changing the number of threads per block to be a multiple of 32 threads. Between 128 and 256      \n          threads per block is a good initial range for experimentation. Use smaller thread blocks rather than one      \n          large thread block per multiprocessor if latency affects performance.  This is particularly beneficial to     \n          kernels that frequently call __syncthreads(). See the Hardware Model                                          \n          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      \n          details on launch configurations.                                                                             \nOPT   Est. Local Speedup: 29.42%                                                                                    \n          The difference between calculated theoretical (50.0%) and measured achieved occupancy (35.3%) can be the      \n          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   \n          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   \n          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     \n          optimizing occupancy.                                                                                         \n    ----- --------------------------------------------------------------------------------------------------------------\n    OPT   Est. Local Speedup: 50%                                                                                       \n          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       \n          hardware maximum of 8. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that    \n          can fit on the SM.                                                                                            \n
./max-distance/build        reduceMaxKernel           4           2             8                 934.970000        2061833               29.060000              4.710000          2190.0                   49.570000                 3.420000         1570209                  29.060000          8    524160                  16                    0.032002                               0                        32.000000                               0   1.000000            16                  128                  128               32                           16                   50.000000                41.370000                13.240000         N/A                                                                                                                                                                                                                                                                                                                                                                      N/A                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       OPT   This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance \n          of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate    \n          latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.                 \nOPT   Est. Speedup: 75%                                                                                             \n          Threads are executed in groups of 32 threads called warps. This kernel launch is configured to execute 8      \n          threads per block. Consequently, some threads in a warp are masked off and those hardware resources are       \n          unused. Try changing the number of threads per block to be a multiple of 32 threads. Between 128 and 256      \n          threads per block is a good initial range for experimentation. Use smaller thread blocks rather than one      \n          large thread block per multiprocessor if latency affects performance.  This is particularly beneficial to     \n          kernels that frequently call __syncthreads(). See the Hardware Model                                          \n          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      \n          details on launch configurations.                                                                             \nOPT   Est. Local Speedup: 50%                                                                                       \n          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       \n          hardware maximum of 8. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that    \n          can fit on the SM.                                                                                            \n
./max-distance/build        reduceMaxKernel           4           4            16                 935.490000        1128065               31.150000              8.550000          1200.0                   54.520000                 5.180000          899368                  31.150000         16    262080                  16                    0.032002                               0                        64.000000                               0 546.000000            16                  128                  128               32                           16                   50.000000                41.960000                13.430000         N/A                                                                                                                                                                                                                                                                                                                                                                      N/A                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       OPT   This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance \n          of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate    \n          latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.                 \nOPT   Est. Speedup: 50%                                                                                             \n          Threads are executed in groups of 32 threads called warps. This kernel launch is configured to execute 16     \n          threads per block. Consequently, some threads in a warp are masked off and those hardware resources are       \n          unused. Try changing the number of threads per block to be a multiple of 32 threads. Between 128 and 256      \n          threads per block is a good initial range for experimentation. Use smaller thread blocks rather than one      \n          large thread block per multiprocessor if latency affects performance.  This is particularly beneficial to     \n          kernels that frequently call __syncthreads(). See the Hardware Model                                          \n          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      \n          details on launch configurations.                                                                             \nOPT   Est. Local Speedup: 50%                                                                                       \n          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       \n          hardware maximum of 8. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that    \n          can fit on the SM.                                                                                            \n
./max-distance/build        reduceMaxKernel           4           8            32                 943.900000         613545               32.960000             15.770000          645.82                   58.760000                 8.610000          509344                  32.960000         32    131040                  16                    0.032002                               0                       128.000000                               0 273.000000            16                  128                  128               32                           16                   50.000000                42.040000                13.450000         N/A                                                                                                                                                                                                                                                                                                                                                                      N/A                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             OPT   This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance \n          of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate    \n          latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.                 \nOPT   Est. Local Speedup: 50%                                                                                       \n          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       \n          hardware maximum of 8. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that    \n          can fit on the SM.                                                                                            \n
./max-distance/build        reduceMaxKernel           4          16            64                 924.960000         321993               68.150000             29.780000          346.46                   96.850000                15.430000          318804                  68.150000         64     65520                  16                    0.032002                               0                       256.000000                               0 136.500000            16                   64                  128               16                           32                  100.000000                88.510000                28.320000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sectionsst. Local Speedup: 11.49%                                                                                    \n          The difference between calculated theoretical (100.0%) and measured achieved occupancy (88.5%) can be the     \n          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   \n          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   \n          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     \n          optimizing occupancy.                                                                                         \n
./max-distance/build        reduceMaxKernel           4          32           128                 925.870000         313219               77.030000             30.580000          336.83                   93.870000                15.360000          310058                  77.030000        128     32760                  16                    0.032002                               0                       512.000000                               0 136.500000            16                   32                   64                8                           32                  100.000000                88.730000                28.390000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sectionsst. Local Speedup: 11.27%                                                                                    \n          The difference between calculated theoretical (100.0%) and measured achieved occupancy (88.7%) can be the     \n          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   \n          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   \n          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     \n          optimizing occupancy.                                                                                         \n
./max-distance/build        reduceMaxKernel           4          64           256                 925.720000         343206               77.350000             27.950000          369.06                   85.990000                13.830000          340002                  77.350000        256     16380                  16                    0.032002                               0                         1.020000                               0 136.500000            16                   16                   32                4                           32                  100.000000                89.780000                28.730000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sectionsst. Local Speedup: 10.22%                                                                                    \n          The difference between calculated theoretical (100.0%) and measured achieved occupancy (89.8%) can be the     \n          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   \n          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   \n          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     \n          optimizing occupancy.                                                                                         \n
./max-distance/build        reduceMaxKernel           4         128           512                 927.630000         397403               73.120000             24.210000          426.62                   77.260000                11.850000          393364                  73.120000        512      8190                  16                    0.032002                               0                         2.050000                               0 136.500000            16                    8                   16                2                           32                  100.000000                90.910000                29.090000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sections
./max-distance/build        reduceMaxKernel           4         256          1024                 927.900000         527146               60.120000             18.310000          564.74                   63.450000                 8.910000          496547                  60.120000          1      4095                  16                    0.032002                               0                         4.100000                               0 136.500000            16                    4                    8                1                           32                  100.000000                97.520000                31.200000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sections
./max-distance/build        reduceMaxKernel           8           1             8                 936.700000        2064038               29.040000              4.720000          2180.0                   49.540000                 3.420000         1571272                  29.040000          8    524160                  16                    0.032002                               0                        32.000000                               0   1.000000            16                  128                  128               32                           16                   50.000000                41.350000                13.230000         N/A                                                                                                                                                                                                                                                                                                                                                                      N/A                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       OPT   This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance \n          of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate    \n          latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.                 \nOPT   Est. Speedup: 75%                                                                                             \n          Threads are executed in groups of 32 threads called warps. This kernel launch is configured to execute 8      \n          threads per block. Consequently, some threads in a warp are masked off and those hardware resources are       \n          unused. Try changing the number of threads per block to be a multiple of 32 threads. Between 128 and 256      \n          threads per block is a good initial range for experimentation. Use smaller thread blocks rather than one      \n          large thread block per multiprocessor if latency affects performance.  This is particularly beneficial to     \n          kernels that frequently call __syncthreads(). See the Hardware Model                                          \n          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      \n          details on launch configurations.                                                                             \nOPT   Est. Local Speedup: 50%                                                                                       \n          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       \n          hardware maximum of 8. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that    \n          can fit on the SM.                                                                                            \n
./max-distance/build        reduceMaxKernel           8           2            16                 939.430000        1133493               31.040000              8.530000          1200.0                   54.320000                 5.170000          900932                  31.040000         16    262080                  16                    0.032002                               0                        64.000000                               0 546.000000            16                  128                  128               32                           16                   50.000000                41.940000                13.420000         N/A                                                                                                                                                                                                                                                                                                                                                                      N/A                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       OPT   This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance \n          of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate    \n          latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.                 \nOPT   Est. Speedup: 50%                                                                                             \n          Threads are executed in groups of 32 threads called warps. This kernel launch is configured to execute 16     \n          threads per block. Consequently, some threads in a warp are masked off and those hardware resources are       \n          unused. Try changing the number of threads per block to be a multiple of 32 threads. Between 128 and 256      \n          threads per block is a good initial range for experimentation. Use smaller thread blocks rather than one      \n          large thread block per multiprocessor if latency affects performance.  This is particularly beneficial to     \n          kernels that frequently call __syncthreads(). See the Hardware Model                                          \n          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      \n          details on launch configurations.                                                                             \nOPT   Est. Local Speedup: 50%                                                                                       \n          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       \n          hardware maximum of 8. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that    \n          can fit on the SM.                                                                                            \n
./max-distance/build        reduceMaxKernel           8           4            32                 935.470000         611986               32.980000             15.730000          651.36                   58.790000                 8.610000          510432                  32.980000         32    131040                  16                    0.032002                               0                       128.000000                               0 273.000000            16                  128                  128               32                           16                   50.000000                42.120000                13.480000         N/A                                                                                                                                                                                                                                                                                                                                                                      N/A                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             OPT   This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance \n          of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate    \n          latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.                 \nOPT   Est. Local Speedup: 50%                                                                                       \n          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       \n          hardware maximum of 8. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that    \n          can fit on the SM.                                                                                            \n
./max-distance/build        reduceMaxKernel           8           8            64                 925.410000         322119               68.170000             29.770000          346.21                   96.870000                15.410000          318721                  68.170000         64     65520                  16                    0.032002                               0                       256.000000                               0 136.500000            16                   64                  128               16                           32                  100.000000                88.560000                28.340000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sectionsst. Local Speedup: 11.44%                                                                                    \n          The difference between calculated theoretical (100.0%) and measured achieved occupancy (88.6%) can be the     \n          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   \n          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   \n          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     \n          optimizing occupancy.                                                                                         \n
./max-distance/build        reduceMaxKernel           8          16           128                 925.120000         313329               77.070000             30.620000          336.96                   93.910000                15.390000          310189                  77.070000        128     32760                  16                    0.032002                               0                       512.000000                               0 136.500000            16                   32                   64                8                           32                  100.000000                88.730000                28.390000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sections.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  OPT   Est. Local Speedup: 11.27%                                                                                    \n          The difference between calculated theoretical (100.0%) and measured achieved occupancy (88.7%) can be the     \n          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   \n          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   \n          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     \n          optimizing occupancy.                                                                                         \n
./max-distance/build        reduceMaxKernel           8          32           256                 925.810000         343382               77.330000             27.990000          369.12                   85.970000                13.850000          339936                  77.330000        256     16380                  16                    0.032002                               0                         1.020000                               0 136.500000            16                   16                   32                4                           32                  100.000000                89.780000                28.730000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sectionsst. Local Speedup: 10.22%                                                                                    \n          The difference between calculated theoretical (100.0%) and measured achieved occupancy (89.8%) can be the     \n          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   \n          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   \n          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     \n          optimizing occupancy.                                                                                         \n
./max-distance/build        reduceMaxKernel           8          64           512                 927.720000         396988               73.150000             24.220000          426.43                   77.290000                11.870000          393177                  73.150000        512      8190                  16                    0.032002                               0                         2.050000                               0 136.500000            16                    8                   16                2                           32                  100.000000                90.910000                29.090000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sections
./max-distance/build        reduceMaxKernel           8         128          1024                 931.560000         527204               60.080000             18.310000          562.91                   63.430000                 8.920000          496657                  60.080000          1      4095                  16                    0.032002                               0                         4.100000                               0 136.500000            16                    4                    8                1                           32                  100.000000                97.510000                31.200000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sections
./max-distance/build        reduceMaxKernel          16           1            16                 934.800000        1132361               31.090000              8.550000          1200.0                   54.400000                 5.180000          901466                  31.090000         16    262080                  16                    0.032002                               0                        64.000000                               0 546.000000            16                  128                  128               32                           16                   50.000000                41.910000                13.410000         N/A                                                                                                                                                                                                                                                                                                                                                                      N/A                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       OPT   This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance \n          of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate    \n          latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.                 \nOPT   Est. Speedup: 50%                                                                                             \n          Threads are executed in groups of 32 threads called warps. This kernel launch is configured to execute 16     \n          threads per block. Consequently, some threads in a warp are masked off and those hardware resources are       \n          unused. Try changing the number of threads per block to be a multiple of 32 threads. Between 128 and 256      \n          threads per block is a good initial range for experimentation. Use smaller thread blocks rather than one      \n          large thread block per multiprocessor if latency affects performance.  This is particularly beneficial to     \n          kernels that frequently call __syncthreads(). See the Hardware Model                                          \n          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      \n          details on launch configurations.                                                                             \nOPT   Est. Local Speedup: 50%                                                                                       \n          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       \n          hardware maximum of 8. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that    \n          can fit on the SM.                                                                                            \n
./max-distance/build        reduceMaxKernel          16           2            32                 942.250000         611769               32.960000             15.720000          647.07                   58.750000                 8.600000          511405                  32.960000         32    131040                  16                    0.032002                               0                       128.000000                               0 273.000000            16                  128                  128               32                           16                   50.000000                41.950000                13.420000         N/A                                                                                                                                                                                                                                                                                                                                                                      N/A                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             OPT   This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance \n          of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate    \n          latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.                 \nOPT   Est. Local Speedup: 50%                                                                                       \n          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       \n          hardware maximum of 8. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that    \n          can fit on the SM.                                                                                            \n
./max-distance/build        reduceMaxKernel          16           4            64                 925.490000         321896               68.160000             29.800000          346.21                   96.860000                15.440000          318839                  68.160000         64     65520                  16                    0.032002                               0                       256.000000                               0 136.500000            16                   64                  128               16                           32                  100.000000                88.530000                28.330000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sectionsst. Local Speedup: 11.47%                                                                                    \n          The difference between calculated theoretical (100.0%) and measured achieved occupancy (88.5%) can be the     \n          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   \n          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   \n          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     \n          optimizing occupancy.                                                                                         \n
./max-distance/build        reduceMaxKernel          16           8           128                 924.920000         313284               77.060000             30.620000          337.06                   93.910000                15.390000          310165                  77.060000        128     32760                  16                    0.032002                               0                       512.000000                               0 136.500000            16                   32                   64                8                           32                  100.000000                88.730000                28.390000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sections.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  OPT   Est. Local Speedup: 11.27%                                                                                    \n          The difference between calculated theoretical (100.0%) and measured achieved occupancy (88.7%) can be the     \n          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   \n          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   \n          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     \n          optimizing occupancy.                                                                                         \n
./max-distance/build        reduceMaxKernel          16          16           256                 925.560000         343363               77.290000             27.930000          369.41                   85.920000                13.820000          340005                  77.290000        256     16380                  16                    0.032002                               0                         1.020000                               0 136.500000            16                   16                   32                4                           32                  100.000000                89.780000                28.730000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sections.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  OPT   Est. Local Speedup: 10.22%                                                                                    \n          The difference between calculated theoretical (100.0%) and measured achieved occupancy (89.8%) can be the     \n          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   \n          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   \n          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     \n          optimizing occupancy.                                                                                         \n
./max-distance/build        reduceMaxKernel          16          32           512                 927.880000         397660               73.150000             24.220000          426.37                   77.290000                11.880000          393309                  73.150000        512      8190                  16                    0.032002                               0                         2.050000                               0 136.500000            16                    8                   16                2                           32                  100.000000                90.910000                29.090000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sections
./max-distance/build        reduceMaxKernel          16          64          1024                 928.550000         528215               60.080000             18.320000           564.7                   63.420000                 8.920000          496723                  60.080000          1      4095                  16                    0.032002                               0                         4.100000                               0 136.500000            16                    4                    8                1                           32                  100.000000                97.520000                31.210000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sections
./max-distance/build        reduceMaxKernel          32           1            32                 946.490000         616064               32.900000             15.750000          645.22                   58.650000                 8.600000          511707                  32.900000         32    131040                  16                    0.032002                               0                       128.000000                               0 273.000000            16                  128                  128               32                           16                   50.000000                41.970000                13.430000         N/A                                                                                                                                                                                                                                                                                                                                                                      N/A                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             OPT   This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance \n          of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate    \n          latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.                 \nOPT   Est. Local Speedup: 50%                                                                                       \n          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       \n          hardware maximum of 8. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that    \n          can fit on the SM.                                                                                            \n
./max-distance/build        reduceMaxKernel          32           2            64                 926.990000         322094               68.120000             29.780000          345.86                   96.800000                15.430000          318794                  68.120000         64     65520                  16                    0.032002                               0                       256.000000                               0 136.500000            16                   64                  128               16                           32                  100.000000                88.620000                28.360000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sectionsst. Local Speedup: 11.38%                                                                                    \n          The difference between calculated theoretical (100.0%) and measured achieved occupancy (88.6%) can be the     \n          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   \n          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   \n          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     \n          optimizing occupancy.                                                                                         \n
./max-distance/build        reduceMaxKernel          32           4           128                 925.790000         313578               77.040000             30.660000          336.83                   93.880000                15.410000          310129                  77.040000        128     32760                  16                    0.032002                               0                       512.000000                               0 136.500000            16                   32                   64                8                           32                  100.000000                88.730000                28.400000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sectionsst. Local Speedup: 11.27%                                                                                    \n          The difference between calculated theoretical (100.0%) and measured achieved occupancy (88.7%) can be the     \n          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   \n          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   \n          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     \n          optimizing occupancy.                                                                                         \n
./max-distance/build        reduceMaxKernel          32           8           256                 925.170000         343163               77.340000             27.970000          369.34                   85.980000                13.840000          339866                  77.340000        256     16380                  16                    0.032002                               0                         1.020000                               0 136.500000            16                   16                   32                4                           32                  100.000000                89.780000                28.730000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sectionsst. Local Speedup: 10.22%                                                                                    \n          The difference between calculated theoretical (100.0%) and measured achieved occupancy (89.8%) can be the     \n          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   \n          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   \n          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     \n          optimizing occupancy.                                                                                         \n
./max-distance/build        reduceMaxKernel          32          16           512                 927.470000         397201               73.170000             24.220000          426.43                   77.310000                11.870000          393423                  73.170000        512      8190                  16                    0.032002                               0                         2.050000                               0 136.500000            16                    8                   16                2                           32                  100.000000                90.920000                29.090000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sections
./max-distance/build        reduceMaxKernel          32          32          1024                 928.540000         527056               60.070000             18.330000          564.83                   63.450000                 8.920000          496544                  60.070000          1      4095                  16                    0.032002                               0                         4.100000                               0 136.500000            16                    4                    8                1                           32                  100.000000                97.510000                31.200000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sections
./max-distance/build        reduceMaxKernel          64           1            64                 925.130000         322081               68.150000             29.760000           346.4                   96.840000                15.400000          318770                  68.150000         64     65520                  16                    0.032002                               0                       256.000000                               0 136.500000            16                   64                  128               16                           32                  100.000000                88.600000                28.350000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sectionsst. Local Speedup: 11.4%                                                                                     \n          The difference between calculated theoretical (100.0%) and measured achieved occupancy (88.6%) can be the     \n          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   \n          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   \n          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     \n          optimizing occupancy.                                                                                         \n
./max-distance/build        reduceMaxKernel          64           2           128                 925.450000         313408               77.070000             30.600000          336.83                   93.920000                15.370000          310071                  77.070000        128     32760                  16                    0.032002                               0                       512.000000                               0 136.500000            16                   32                   64                8                           32                  100.000000                88.720000                28.390000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sectionsst. Local Speedup: 11.28%                                                                                    \n          The difference between calculated theoretical (100.0%) and measured achieved occupancy (88.7%) can be the     \n          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   \n          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   \n          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     \n          optimizing occupancy.                                                                                         \n
./max-distance/build        reduceMaxKernel          64           4           256                 926.090000         343431               77.290000             27.970000          369.18                   85.930000                13.830000          339876                  77.290000        256     16380                  16                    0.032002                               0                         1.020000                               0 136.500000            16                   16                   32                4                           32                  100.000000                89.770000                28.730000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sectionsst. Local Speedup: 10.23%                                                                                    \n          The difference between calculated theoretical (100.0%) and measured achieved occupancy (89.8%) can be the     \n          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   \n          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   \n          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     \n          optimizing occupancy.                                                                                         \n
./max-distance/build        reduceMaxKernel          64           8           512                 927.780000         397372               73.170000             24.210000           426.3                   77.310000                11.850000          393236                  73.170000        512      8190                  16                    0.032002                               0                         2.050000                               0 136.500000            16                    8                   16                2                           32                  100.000000                90.910000                29.090000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sections
./max-distance/build        reduceMaxKernel          64          16          1024                 929.300000         527828               60.070000             18.330000          564.32                   63.420000                 8.910000          496719                  60.070000          1      4095                  16                    0.032002                               0                         4.100000                               0 136.500000            16                    4                    8                1                           32                  100.000000                97.510000                31.200000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sections
./max-distance/build        reduceMaxKernel         128           1           128                 925.060000         313134               77.040000             30.630000          337.09                   93.890000                15.390000          310072                  77.040000        128     32760                  16                    0.032002                               0                       512.000000                               0 136.500000            16                   32                   64                8                           32                  100.000000                88.720000                28.390000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sectionsst. Local Speedup: 11.28%                                                                                    \n          The difference between calculated theoretical (100.0%) and measured achieved occupancy (88.7%) can be the     \n          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   \n          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   \n          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     \n          optimizing occupancy.                                                                                         \n
./max-distance/build        reduceMaxKernel         128           2           256                 925.990000         343439               77.340000             27.940000          369.02                   85.980000                13.820000          339990                  77.340000        256     16380                  16                    0.032002                               0                         1.020000                               0 136.500000            16                   16                   32                4                           32                  100.000000                89.770000                28.730000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sectionsst. Local Speedup: 10.23%                                                                                    \n          The difference between calculated theoretical (100.0%) and measured achieved occupancy (89.8%) can be the     \n          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   \n          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   \n          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     \n          optimizing occupancy.                                                                                         \n
./max-distance/build        reduceMaxKernel         128           4           512                 927.990000         398132               73.120000             24.220000          426.46                   77.260000                11.860000          393321                  73.120000        512      8190                  16                    0.032002                               0                         2.050000                               0 136.500000            16                    8                   16                2                           32                  100.000000                90.910000                29.090000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sections
./max-distance/build        reduceMaxKernel         128           8          1024                 928.830000         527353               60.060000             18.320000           564.7                   63.450000                 8.920000          496488                  60.060000          1      4095                  16                    0.032002                               0                         4.100000                               0 136.500000            16                    4                    8                1                           32                  100.000000                97.510000                31.200000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sections
./max-distance/build        reduceMaxKernel         256           1           256                 925.090000         343029               77.340000             27.970000          369.34                   85.980000                13.840000          339862                  77.340000        256     16380                  16                    0.032002                               0                         1.020000                               0 136.500000            16                   16                   32                4                           32                  100.000000                89.770000                28.730000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sectionsst. Local Speedup: 10.23%                                                                                    \n          The difference between calculated theoretical (100.0%) and measured achieved occupancy (89.8%) can be the     \n          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   \n          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   \n          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     \n          optimizing occupancy.                                                                                         \n
./max-distance/build        reduceMaxKernel         256           2           512                 927.650000         397260               73.140000             24.190000           426.5                   77.280000                11.860000          393400                  73.140000        512      8190                  16                    0.032002                               0                         2.050000                               0 136.500000            16                    8                   16                2                           32                  100.000000                90.920000                29.090000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sections
./max-distance/build        reduceMaxKernel         256           4          1024                 929.400000         528605               60.040000             18.320000          564.61                   63.410000                 8.920000          496856                  60.040000          1      4095                  16                    0.032002                               0                         4.100000                               0 136.500000            16                    4                    8                1                           32                  100.000000                97.520000                31.210000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sections
./max-distance/build        reduceMaxKernel         512           1           512                 927.060000         397226               73.150000             24.230000          426.72                   77.290000                11.880000          393210                  73.150000        512      8190                  16                    0.032002                               0                         2.050000                               0 136.500000            16                    8                   16                2                           32                  100.000000                90.920000                29.090000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sections
./max-distance/build        reduceMaxKernel         512           2          1024                 929.620000         527515               60.070000             18.320000          564.16                   63.410000                 8.920000          496847                  60.070000          1      4095                  16                    0.032002                               0                         4.100000                               0 136.500000            16                    4                    8                1                           32                  100.000000                97.520000                31.210000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sections
./max-distance/build        reduceMaxKernel        1024           1          1024                 930.550000         526904               60.030000             18.280000          563.94                   63.450000                 8.900000          496531                  60.030000          1      4095                  16                    0.032002                               0                         4.100000                               0 136.500000            16                    4                    8                1                           32                  100.000000                97.520000                31.200000         N/A                                                                                                                           INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. \n          Check both the Compute Workload Analysis and Memory Workload Analysis sections